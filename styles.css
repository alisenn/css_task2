/* General Styles */
body, html {
  margin: 0;
  padding: 0;
  font-family: Arial, sans-serif;
  background-color: #f2f2f2;
}

header {
  background-color: #333;
  color: #fff;
  padding: 1rem;
  text-align: center;
}

h2 {
  text-align: center;
  margin-bottom: 20px;
}

/* Mobile Responsiveness */
@media (max-width: 768px) {
  header h1, h2 {
      font-size: 1.2em;
  }
}

/* Interactivity Section */
.fade-button, .scale-button {
  border: none;
  padding: 15px;
  margin: 10px;
  font-size: 16px;
  border-radius: 5px;
}

.fade-button {
  background-color: coral;
  transition: opacity 0.5s;
}

.fade-button:hover {
  opacity: 0.5;
}

.scale-button {
  background-color: lightgreen;
  transition: transform 0.5s;
}

.scale-button:hover {
  transform: scale(1.2);
}

.slider-container {
  width: 80%;
  margin: 0 auto;
}

.slider {
  width: 100%;
  transition: background-color 0.5s;
}

.slider:hover {
  background-color: #ddd;
}

/* ... (previous CSS code remains the same) */

/* Pseudo-Elements Section */
.decorative-box, .text-box, .select-box {
  position: relative;
  width: 180px;
  height: 80px;
  margin: 20px auto;
  background-color: #eee;
  text-align: center;
  line-height: 80px;
}

.decorative-box::before,
.decorative-box::after {
  content: "";
  position: absolute;
  width: 10px;
  height: 10px;
  background: red;
  top: 50%;
  left: 50%;
}

.decorative-box::before {
  transform: translate(-50%, -50%) rotate(0deg);
}

.decorative-box::after {
  transform: translate(-50%, -50%) rotate(90deg);
}

.text-box::first-letter {
  font-size: 2em;
  color: red;
}

.select-box::selection {
  background: gold;
}



/* Original Pseudo-elements */
.decorative-box::before,
.decorative-box::after {
  width: 50%;
  height: 50%;
  background: rgba(255, 0, 0, 0.5);
  top: 25%;
  left: 25%;
  transition: transform 0.3s;
}

.decorative-box::before {
  transform: rotate(45deg);
}

.decorative-box::after {
  transform: rotate(-45deg);
}

/* Additional Pseudo-elements */
.decorative-box::first-letter {
  content: "A";
  font-size: 2em;
  line-height: 1;
  padding-right: 5px;
  font-weight: bold;
}

.decorative-box::selection {
  background: gold;
}

/* ... (other CSS remains the same) */

/* 3D Elements Section */
.card {
  width: 100px;
  height: 150px;
  perspective: 1000px;
  margin: 20px auto;
}

.card-front, .card-back {
  width: 100%;
  height: 100%;
  position: absolute;
  backface-visibility: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 24px;
}

.card-front {
  background: lightblue;
}

.card-back {
  background: lightgreen;
  transform: rotateY(180deg);
}

.card:hover .card-front {
  transform: rotateY(180deg);
}

.card:hover .card-back {
  transform: rotateY(360deg);
}

/* Custom Cursor Section */
.cursor-box {
  width: 200px;
  height: 200px;
  background-color: #eee;
  margin: 20px auto;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg"  width="40" height="48" viewport="0 0 100 100" style="fill:black;font-size:24px;"><text y="50%">ðŸ‘‹</text></svg>'), auto;
}


.cube {
  position: relative;
  width: 100px;
  transform-style: preserve-3d;
  animation: rotateCube 10s infinite linear;
  margin: 20px auto;
}

.side {
  position: absolute;
  width: 100px;
  height: 100px;
  background: rgba(0, 128, 128, 0.7);
  border: 1px solid #000;
  text-align: center;
  line-height: 100px;
}

.front  { transform: rotateY(   0deg ) translateZ( 50px ); }
.back   { transform: rotateY( 180deg ) translateZ( 50px ); }
.left   { transform: rotateY( -90deg ) translateZ( 50px ); }
.right  { transform: rotateY(  90deg ) translateZ( 50px ); }
.top    { transform: rotateX(  90deg ) translateZ( 50px ); }
.bottom { transform: rotateX( -90deg ) translateZ( 50px ); }

@keyframes rotateCube {
  from { transform: rotateX(0deg) rotateY(0deg); }
  to   { transform: rotateX(360deg) rotateY(360deg); }
}